# Generated by Django 5.2 on 2025-06-02 13:11

import django.contrib.gis.db.models.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='The unique code that identifies the region.', max_length=32, unique=True, verbose_name='Code')),
                ('name', models.CharField(help_text='The name of the region.', max_length=255, verbose_name='Name')),
                ('alt_name', models.CharField(blank=True, help_text='Alternative names for the region. If there is more than one, they will be delimited by "|".', max_length=255, null=True, verbose_name='Alternative names.')),
                ('continent', models.CharField(help_text='The name of the continent.', max_length=64, verbose_name='Continent')),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='AutonomousCommunity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='The unique code that identifies the region.', max_length=32, unique=True, verbose_name='Code')),
                ('name', models.CharField(help_text='The name of the region.', max_length=255, verbose_name='Name')),
                ('alt_name', models.CharField(blank=True, help_text='Alternative names for the region. If there is more than one, they will be delimited by "|".', max_length=255, null=True, verbose_name='Alternative names.')),
                ('geometry', django.contrib.gis.db.models.fields.MultiPolygonField(help_text='Geometry of the region.', srid=4326, verbose_name='Geometry.')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='autonomous_communities', to='regions.country')),
            ],
            options={
                'verbose_name': 'Autonomous Community',
                'verbose_name_plural': 'Autonomous Communities',
                'ordering': ['code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='The unique code that identifies the region.', max_length=32, unique=True, verbose_name='Code')),
                ('name', models.CharField(help_text='The name of the region.', max_length=255, verbose_name='Name')),
                ('alt_name', models.CharField(blank=True, help_text='Alternative names for the region. If there is more than one, they will be delimited by "|".', max_length=255, null=True, verbose_name='Alternative names.')),
                ('geometry', django.contrib.gis.db.models.fields.MultiPolygonField(help_text='Geometry of the region.', srid=4326, verbose_name='Geometry.')),
                ('autonomous_community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='provinces', to='regions.autonomouscommunity')),
            ],
            options={
                'verbose_name': 'Province',
                'verbose_name_plural': 'Provinces',
                'ordering': ['code'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Municipality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='The unique code that identifies the region.', max_length=32, unique=True, verbose_name='Code')),
                ('name', models.CharField(help_text='The name of the region.', max_length=255, verbose_name='Name')),
                ('alt_name', models.CharField(blank=True, help_text='Alternative names for the region. If there is more than one, they will be delimited by "|".', max_length=255, null=True, verbose_name='Alternative names.')),
                ('geometry', django.contrib.gis.db.models.fields.MultiPolygonField(help_text='Geometry of the region.', srid=4326, verbose_name='Geometry.')),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='municipalities', to='regions.province')),
            ],
            options={
                'verbose_name': 'Municipality',
                'verbose_name_plural': 'Municipalities',
                'ordering': ['code'],
                'abstract': False,
            },
        ),
        migrations.AddIndex(
            model_name='autonomouscommunity',
            index=models.Index(fields=['name'], name='regions_aut_name_4a9119_idx'),
        ),
        migrations.AddIndex(
            model_name='province',
            index=models.Index(fields=['name'], name='regions_pro_name_db00e5_idx'),
        ),
        migrations.AddIndex(
            model_name='municipality',
            index=models.Index(fields=['name'], name='regions_mun_name_a8d102_idx'),
        ),
    ]
