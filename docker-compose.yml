services:
  data_db:
    image: postgis/postgis:15-3.5
    container_name: metrics-db
    hostname: db
    ports:
      - "5433:5432"
    volumes:
      - metrics-db_data:/var/lib/postgresql/data
      - metrics-db_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres.env
    # command: "-c log_statement=all"

  data_redis:
    image: redis:7.0.15
    container_name: metrics-redis
    hostname: redis
    env_file:
      - ./.envs/.production/.django.env

  data_broker:
    image: rabbitmq:4.1.0-management
    container_name: metrics-broker
    hostname: broker
    configs:
      - source: plugins
        target: /etc/rabbitmq/enabled_plugins
    env_file:
      - ./.envs/.local/.django.env
    volumes:
      - metrics-broker:/var/lib/rabbitmq

  backend_api: &api
    image:  ghcr.io/mosquito-alert/metrics-backend:0.2.0
    container_name: metrics-api
    hostname: api
    ports:
      - "8000:5000"
    volumes:
      - ./api/static:/usr/app/static
    env_file:
      - ./.envs/.production/.django.env
      - ./.envs/.production/.postgres.env
    healthcheck:
      test: "curl -f http://localhost:5000/ping/ || exit 1"
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    depends_on:
      - data_db
      - data_broker

  backend_worker:
    <<: *api
    container_name: metrics-worker
    hostname: worker
    ports: []
    command: /scripts/start_worker
    healthcheck:
      test: "celery inspect ping -d celery@$$HOSTNAME"


  backend_worker_flower:
    <<: *api
    container_name: metrics-flower
    hostname: flower
    ports:
      - "5555:5555"
    command: /scripts/start_flower
    healthcheck:
      disable: true

volumes:
  metrics-db_data:
  metrics-db_data_backups:
  metrics-redis_data:
  metrics-broker:
    driver: local

configs:
  plugins:
    content: "[rabbitmq_federation_management,rabbitmq_management,rabbitmq_mqtt,rabbitmq_stomp]."
